// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: v1/Stat.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PJvmGcType int32

const (
	PJvmGcType_JVM_GC_TYPE_UNKNOWN  PJvmGcType = 0
	PJvmGcType_JVM_GC_TYPE_SERIAL   PJvmGcType = 1
	PJvmGcType_JVM_GC_TYPE_PARALLEL PJvmGcType = 2
	PJvmGcType_JVM_GC_TYPE_CMS      PJvmGcType = 3
	PJvmGcType_JVM_GC_TYPE_G1       PJvmGcType = 4
)

// Enum value maps for PJvmGcType.
var (
	PJvmGcType_name = map[int32]string{
		0: "JVM_GC_TYPE_UNKNOWN",
		1: "JVM_GC_TYPE_SERIAL",
		2: "JVM_GC_TYPE_PARALLEL",
		3: "JVM_GC_TYPE_CMS",
		4: "JVM_GC_TYPE_G1",
	}
	PJvmGcType_value = map[string]int32{
		"JVM_GC_TYPE_UNKNOWN":  0,
		"JVM_GC_TYPE_SERIAL":   1,
		"JVM_GC_TYPE_PARALLEL": 2,
		"JVM_GC_TYPE_CMS":      3,
		"JVM_GC_TYPE_G1":       4,
	}
)

func (x PJvmGcType) Enum() *PJvmGcType {
	p := new(PJvmGcType)
	*p = x
	return p
}

func (x PJvmGcType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PJvmGcType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_Stat_proto_enumTypes[0].Descriptor()
}

func (PJvmGcType) Type() protoreflect.EnumType {
	return &file_v1_Stat_proto_enumTypes[0]
}

func (x PJvmGcType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PJvmGcType.Descriptor instead.
func (PJvmGcType) EnumDescriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{0}
}

type PPing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PPing) Reset() {
	*x = PPing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PPing) ProtoMessage() {}

func (x *PPing) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PPing.ProtoReflect.Descriptor instead.
func (*PPing) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{0}
}

type PStatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Field:
	//	*PStatMessage_AgentStat
	//	*PStatMessage_AgentStatBatch
	//	*PStatMessage_AgentUriStat
	Field isPStatMessage_Field `protobuf_oneof:"field"`
}

func (x *PStatMessage) Reset() {
	*x = PStatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PStatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PStatMessage) ProtoMessage() {}

func (x *PStatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PStatMessage.ProtoReflect.Descriptor instead.
func (*PStatMessage) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{1}
}

func (m *PStatMessage) GetField() isPStatMessage_Field {
	if m != nil {
		return m.Field
	}
	return nil
}

func (x *PStatMessage) GetAgentStat() *PAgentStat {
	if x, ok := x.GetField().(*PStatMessage_AgentStat); ok {
		return x.AgentStat
	}
	return nil
}

func (x *PStatMessage) GetAgentStatBatch() *PAgentStatBatch {
	if x, ok := x.GetField().(*PStatMessage_AgentStatBatch); ok {
		return x.AgentStatBatch
	}
	return nil
}

func (x *PStatMessage) GetAgentUriStat() *PAgentUriStat {
	if x, ok := x.GetField().(*PStatMessage_AgentUriStat); ok {
		return x.AgentUriStat
	}
	return nil
}

type isPStatMessage_Field interface {
	isPStatMessage_Field()
}

type PStatMessage_AgentStat struct {
	AgentStat *PAgentStat `protobuf:"bytes,1,opt,name=agentStat,proto3,oneof"`
}

type PStatMessage_AgentStatBatch struct {
	AgentStatBatch *PAgentStatBatch `protobuf:"bytes,2,opt,name=agentStatBatch,proto3,oneof"`
}

type PStatMessage_AgentUriStat struct {
	AgentUriStat *PAgentUriStat `protobuf:"bytes,3,opt,name=agentUriStat,proto3,oneof"`
}

func (*PStatMessage_AgentStat) isPStatMessage_Field() {}

func (*PStatMessage_AgentStatBatch) isPStatMessage_Field() {}

func (*PStatMessage_AgentUriStat) isPStatMessage_Field() {}

type PAgentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname       string           `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Ip             string           `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Ports          string           `protobuf:"bytes,3,opt,name=ports,proto3" json:"ports,omitempty"`
	ServiceType    int32            `protobuf:"varint,4,opt,name=serviceType,proto3" json:"serviceType,omitempty"`
	Pid            int32            `protobuf:"varint,5,opt,name=pid,proto3" json:"pid,omitempty"`
	AgentVersion   string           `protobuf:"bytes,6,opt,name=agentVersion,proto3" json:"agentVersion,omitempty"`
	VmVersion      string           `protobuf:"bytes,7,opt,name=vmVersion,proto3" json:"vmVersion,omitempty"`
	EndTimestamp   int64            `protobuf:"varint,8,opt,name=endTimestamp,proto3" json:"endTimestamp,omitempty"`
	EndStatus      int32            `protobuf:"varint,9,opt,name=endStatus,proto3" json:"endStatus,omitempty"`
	ServerMetaData *PServerMetaData `protobuf:"bytes,10,opt,name=serverMetaData,proto3" json:"serverMetaData,omitempty"`
	JvmInfo        *PJvmInfo        `protobuf:"bytes,11,opt,name=jvmInfo,proto3" json:"jvmInfo,omitempty"`
	Container      bool             `protobuf:"varint,12,opt,name=container,proto3" json:"container,omitempty"`
}

func (x *PAgentInfo) Reset() {
	*x = PAgentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PAgentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PAgentInfo) ProtoMessage() {}

func (x *PAgentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PAgentInfo.ProtoReflect.Descriptor instead.
func (*PAgentInfo) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{2}
}

func (x *PAgentInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *PAgentInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *PAgentInfo) GetPorts() string {
	if x != nil {
		return x.Ports
	}
	return ""
}

func (x *PAgentInfo) GetServiceType() int32 {
	if x != nil {
		return x.ServiceType
	}
	return 0
}

func (x *PAgentInfo) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *PAgentInfo) GetAgentVersion() string {
	if x != nil {
		return x.AgentVersion
	}
	return ""
}

func (x *PAgentInfo) GetVmVersion() string {
	if x != nil {
		return x.VmVersion
	}
	return ""
}

func (x *PAgentInfo) GetEndTimestamp() int64 {
	if x != nil {
		return x.EndTimestamp
	}
	return 0
}

func (x *PAgentInfo) GetEndStatus() int32 {
	if x != nil {
		return x.EndStatus
	}
	return 0
}

func (x *PAgentInfo) GetServerMetaData() *PServerMetaData {
	if x != nil {
		return x.ServerMetaData
	}
	return nil
}

func (x *PAgentInfo) GetJvmInfo() *PJvmInfo {
	if x != nil {
		return x.JvmInfo
	}
	return nil
}

func (x *PAgentInfo) GetContainer() bool {
	if x != nil {
		return x.Container
	}
	return false
}

type PServerMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerInfo  string          `protobuf:"bytes,1,opt,name=serverInfo,proto3" json:"serverInfo,omitempty"`
	VmArg       []string        `protobuf:"bytes,2,rep,name=vmArg,proto3" json:"vmArg,omitempty"`
	ServiceInfo []*PServiceInfo `protobuf:"bytes,3,rep,name=serviceInfo,proto3" json:"serviceInfo,omitempty"`
}

func (x *PServerMetaData) Reset() {
	*x = PServerMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PServerMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PServerMetaData) ProtoMessage() {}

func (x *PServerMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PServerMetaData.ProtoReflect.Descriptor instead.
func (*PServerMetaData) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{3}
}

func (x *PServerMetaData) GetServerInfo() string {
	if x != nil {
		return x.ServerInfo
	}
	return ""
}

func (x *PServerMetaData) GetVmArg() []string {
	if x != nil {
		return x.VmArg
	}
	return nil
}

func (x *PServerMetaData) GetServiceInfo() []*PServiceInfo {
	if x != nil {
		return x.ServiceInfo
	}
	return nil
}

type PServiceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName string   `protobuf:"bytes,1,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ServiceLib  []string `protobuf:"bytes,2,rep,name=serviceLib,proto3" json:"serviceLib,omitempty"`
}

func (x *PServiceInfo) Reset() {
	*x = PServiceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PServiceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PServiceInfo) ProtoMessage() {}

func (x *PServiceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PServiceInfo.ProtoReflect.Descriptor instead.
func (*PServiceInfo) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{4}
}

func (x *PServiceInfo) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *PServiceInfo) GetServiceLib() []string {
	if x != nil {
		return x.ServiceLib
	}
	return nil
}

type PJvmInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   int32      `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	VmVersion string     `protobuf:"bytes,2,opt,name=vmVersion,proto3" json:"vmVersion,omitempty"`
	GcType    PJvmGcType `protobuf:"varint,3,opt,name=gcType,proto3,enum=v1.PJvmGcType" json:"gcType,omitempty"`
}

func (x *PJvmInfo) Reset() {
	*x = PJvmInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PJvmInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PJvmInfo) ProtoMessage() {}

func (x *PJvmInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PJvmInfo.ProtoReflect.Descriptor instead.
func (*PJvmInfo) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{5}
}

func (x *PJvmInfo) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PJvmInfo) GetVmVersion() string {
	if x != nil {
		return x.VmVersion
	}
	return ""
}

func (x *PJvmInfo) GetGcType() PJvmGcType {
	if x != nil {
		return x.GcType
	}
	return PJvmGcType_JVM_GC_TYPE_UNKNOWN
}

type PAgentStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp       int64            `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CollectInterval int64            `protobuf:"varint,2,opt,name=collectInterval,proto3" json:"collectInterval,omitempty"`
	Gc              *PJvmGc          `protobuf:"bytes,3,opt,name=gc,proto3" json:"gc,omitempty"`
	CpuLoad         *PCpuLoad        `protobuf:"bytes,4,opt,name=cpuLoad,proto3" json:"cpuLoad,omitempty"`
	Transaction     *PTransaction    `protobuf:"bytes,5,opt,name=transaction,proto3" json:"transaction,omitempty"`
	ActiveTrace     *PActiveTrace    `protobuf:"bytes,6,opt,name=activeTrace,proto3" json:"activeTrace,omitempty"`
	DataSourceList  *PDataSourceList `protobuf:"bytes,7,opt,name=dataSourceList,proto3" json:"dataSourceList,omitempty"`
	ResponseTime    *PResponseTime   `protobuf:"bytes,8,opt,name=responseTime,proto3" json:"responseTime,omitempty"`
	Deadlock        *PDeadlock       `protobuf:"bytes,9,opt,name=deadlock,proto3" json:"deadlock,omitempty"`
	FileDescriptor  *PFileDescriptor `protobuf:"bytes,10,opt,name=fileDescriptor,proto3" json:"fileDescriptor,omitempty"`
	DirectBuffer    *PDirectBuffer   `protobuf:"bytes,11,opt,name=directBuffer,proto3" json:"directBuffer,omitempty"`
	Metadata        string           `protobuf:"bytes,12,opt,name=metadata,proto3" json:"metadata,omitempty"`
	TotalThread     *PTotalThread    `protobuf:"bytes,13,opt,name=totalThread,proto3" json:"totalThread,omitempty"`
	LoadedClass     *PLoadedClass    `protobuf:"bytes,14,opt,name=loadedClass,proto3" json:"loadedClass,omitempty"`
}

func (x *PAgentStat) Reset() {
	*x = PAgentStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PAgentStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PAgentStat) ProtoMessage() {}

func (x *PAgentStat) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PAgentStat.ProtoReflect.Descriptor instead.
func (*PAgentStat) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{6}
}

func (x *PAgentStat) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PAgentStat) GetCollectInterval() int64 {
	if x != nil {
		return x.CollectInterval
	}
	return 0
}

func (x *PAgentStat) GetGc() *PJvmGc {
	if x != nil {
		return x.Gc
	}
	return nil
}

func (x *PAgentStat) GetCpuLoad() *PCpuLoad {
	if x != nil {
		return x.CpuLoad
	}
	return nil
}

func (x *PAgentStat) GetTransaction() *PTransaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *PAgentStat) GetActiveTrace() *PActiveTrace {
	if x != nil {
		return x.ActiveTrace
	}
	return nil
}

func (x *PAgentStat) GetDataSourceList() *PDataSourceList {
	if x != nil {
		return x.DataSourceList
	}
	return nil
}

func (x *PAgentStat) GetResponseTime() *PResponseTime {
	if x != nil {
		return x.ResponseTime
	}
	return nil
}

func (x *PAgentStat) GetDeadlock() *PDeadlock {
	if x != nil {
		return x.Deadlock
	}
	return nil
}

func (x *PAgentStat) GetFileDescriptor() *PFileDescriptor {
	if x != nil {
		return x.FileDescriptor
	}
	return nil
}

func (x *PAgentStat) GetDirectBuffer() *PDirectBuffer {
	if x != nil {
		return x.DirectBuffer
	}
	return nil
}

func (x *PAgentStat) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *PAgentStat) GetTotalThread() *PTotalThread {
	if x != nil {
		return x.TotalThread
	}
	return nil
}

func (x *PAgentStat) GetLoadedClass() *PLoadedClass {
	if x != nil {
		return x.LoadedClass
	}
	return nil
}

type PAgentStatBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentStat []*PAgentStat `protobuf:"bytes,1,rep,name=agentStat,proto3" json:"agentStat,omitempty"`
}

func (x *PAgentStatBatch) Reset() {
	*x = PAgentStatBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PAgentStatBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PAgentStatBatch) ProtoMessage() {}

func (x *PAgentStatBatch) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PAgentStatBatch.ProtoReflect.Descriptor instead.
func (*PAgentStatBatch) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{7}
}

func (x *PAgentStatBatch) GetAgentStat() []*PAgentStat {
	if x != nil {
		return x.AgentStat
	}
	return nil
}

type PDataSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ServiceTypeCode      int32  `protobuf:"varint,2,opt,name=serviceTypeCode,proto3" json:"serviceTypeCode,omitempty"`
	DatabaseName         string `protobuf:"bytes,3,opt,name=databaseName,proto3" json:"databaseName,omitempty"`
	Url                  string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	ActiveConnectionSize int32  `protobuf:"varint,5,opt,name=activeConnectionSize,proto3" json:"activeConnectionSize,omitempty"`
	MaxConnectionSize    int32  `protobuf:"varint,6,opt,name=maxConnectionSize,proto3" json:"maxConnectionSize,omitempty"`
}

func (x *PDataSource) Reset() {
	*x = PDataSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PDataSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDataSource) ProtoMessage() {}

func (x *PDataSource) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDataSource.ProtoReflect.Descriptor instead.
func (*PDataSource) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{8}
}

func (x *PDataSource) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PDataSource) GetServiceTypeCode() int32 {
	if x != nil {
		return x.ServiceTypeCode
	}
	return 0
}

func (x *PDataSource) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *PDataSource) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PDataSource) GetActiveConnectionSize() int32 {
	if x != nil {
		return x.ActiveConnectionSize
	}
	return 0
}

func (x *PDataSource) GetMaxConnectionSize() int32 {
	if x != nil {
		return x.MaxConnectionSize
	}
	return 0
}

type PDataSourceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSource []*PDataSource `protobuf:"bytes,1,rep,name=dataSource,proto3" json:"dataSource,omitempty"`
}

func (x *PDataSourceList) Reset() {
	*x = PDataSourceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PDataSourceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDataSourceList) ProtoMessage() {}

func (x *PDataSourceList) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDataSourceList.ProtoReflect.Descriptor instead.
func (*PDataSourceList) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{9}
}

func (x *PDataSourceList) GetDataSource() []*PDataSource {
	if x != nil {
		return x.DataSource
	}
	return nil
}

type PFileDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenFileDescriptorCount int64 `protobuf:"varint,1,opt,name=openFileDescriptorCount,proto3" json:"openFileDescriptorCount,omitempty"`
}

func (x *PFileDescriptor) Reset() {
	*x = PFileDescriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PFileDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PFileDescriptor) ProtoMessage() {}

func (x *PFileDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PFileDescriptor.ProtoReflect.Descriptor instead.
func (*PFileDescriptor) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{10}
}

func (x *PFileDescriptor) GetOpenFileDescriptorCount() int64 {
	if x != nil {
		return x.OpenFileDescriptorCount
	}
	return 0
}

type PJvmGc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                 PJvmGcType      `protobuf:"varint,1,opt,name=type,proto3,enum=v1.PJvmGcType" json:"type,omitempty"`
	JvmMemoryHeapUsed    int64           `protobuf:"varint,2,opt,name=jvmMemoryHeapUsed,proto3" json:"jvmMemoryHeapUsed,omitempty"`
	JvmMemoryHeapMax     int64           `protobuf:"varint,3,opt,name=jvmMemoryHeapMax,proto3" json:"jvmMemoryHeapMax,omitempty"`
	JvmMemoryNonHeapUsed int64           `protobuf:"varint,4,opt,name=jvmMemoryNonHeapUsed,proto3" json:"jvmMemoryNonHeapUsed,omitempty"`
	JvmMemoryNonHeapMax  int64           `protobuf:"varint,5,opt,name=jvmMemoryNonHeapMax,proto3" json:"jvmMemoryNonHeapMax,omitempty"`
	JvmGcOldCount        int64           `protobuf:"varint,6,opt,name=jvmGcOldCount,proto3" json:"jvmGcOldCount,omitempty"`
	JvmGcOldTime         int64           `protobuf:"varint,7,opt,name=jvmGcOldTime,proto3" json:"jvmGcOldTime,omitempty"`
	JvmGcDetailed        *PJvmGcDetailed `protobuf:"bytes,8,opt,name=jvmGcDetailed,proto3" json:"jvmGcDetailed,omitempty"`
}

func (x *PJvmGc) Reset() {
	*x = PJvmGc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PJvmGc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PJvmGc) ProtoMessage() {}

func (x *PJvmGc) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PJvmGc.ProtoReflect.Descriptor instead.
func (*PJvmGc) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{11}
}

func (x *PJvmGc) GetType() PJvmGcType {
	if x != nil {
		return x.Type
	}
	return PJvmGcType_JVM_GC_TYPE_UNKNOWN
}

func (x *PJvmGc) GetJvmMemoryHeapUsed() int64 {
	if x != nil {
		return x.JvmMemoryHeapUsed
	}
	return 0
}

func (x *PJvmGc) GetJvmMemoryHeapMax() int64 {
	if x != nil {
		return x.JvmMemoryHeapMax
	}
	return 0
}

func (x *PJvmGc) GetJvmMemoryNonHeapUsed() int64 {
	if x != nil {
		return x.JvmMemoryNonHeapUsed
	}
	return 0
}

func (x *PJvmGc) GetJvmMemoryNonHeapMax() int64 {
	if x != nil {
		return x.JvmMemoryNonHeapMax
	}
	return 0
}

func (x *PJvmGc) GetJvmGcOldCount() int64 {
	if x != nil {
		return x.JvmGcOldCount
	}
	return 0
}

func (x *PJvmGc) GetJvmGcOldTime() int64 {
	if x != nil {
		return x.JvmGcOldTime
	}
	return 0
}

func (x *PJvmGc) GetJvmGcDetailed() *PJvmGcDetailed {
	if x != nil {
		return x.JvmGcDetailed
	}
	return nil
}

type PJvmGcDetailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JvmGcNewCount            int64   `protobuf:"varint,1,opt,name=jvmGcNewCount,proto3" json:"jvmGcNewCount,omitempty"`
	JvmGcNewTime             int64   `protobuf:"varint,2,opt,name=jvmGcNewTime,proto3" json:"jvmGcNewTime,omitempty"`
	JvmPoolCodeCacheUsed     float64 `protobuf:"fixed64,3,opt,name=jvmPoolCodeCacheUsed,proto3" json:"jvmPoolCodeCacheUsed,omitempty"`
	JvmPoolNewGenUsed        float64 `protobuf:"fixed64,4,opt,name=jvmPoolNewGenUsed,proto3" json:"jvmPoolNewGenUsed,omitempty"`
	JvmPoolOldGenUsed        float64 `protobuf:"fixed64,5,opt,name=jvmPoolOldGenUsed,proto3" json:"jvmPoolOldGenUsed,omitempty"`
	JvmPoolSurvivorSpaceUsed float64 `protobuf:"fixed64,6,opt,name=jvmPoolSurvivorSpaceUsed,proto3" json:"jvmPoolSurvivorSpaceUsed,omitempty"`
	JvmPoolPermGenUsed       float64 `protobuf:"fixed64,7,opt,name=jvmPoolPermGenUsed,proto3" json:"jvmPoolPermGenUsed,omitempty"`
	JvmPoolMetaspaceUsed     float64 `protobuf:"fixed64,8,opt,name=jvmPoolMetaspaceUsed,proto3" json:"jvmPoolMetaspaceUsed,omitempty"`
}

func (x *PJvmGcDetailed) Reset() {
	*x = PJvmGcDetailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PJvmGcDetailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PJvmGcDetailed) ProtoMessage() {}

func (x *PJvmGcDetailed) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PJvmGcDetailed.ProtoReflect.Descriptor instead.
func (*PJvmGcDetailed) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{12}
}

func (x *PJvmGcDetailed) GetJvmGcNewCount() int64 {
	if x != nil {
		return x.JvmGcNewCount
	}
	return 0
}

func (x *PJvmGcDetailed) GetJvmGcNewTime() int64 {
	if x != nil {
		return x.JvmGcNewTime
	}
	return 0
}

func (x *PJvmGcDetailed) GetJvmPoolCodeCacheUsed() float64 {
	if x != nil {
		return x.JvmPoolCodeCacheUsed
	}
	return 0
}

func (x *PJvmGcDetailed) GetJvmPoolNewGenUsed() float64 {
	if x != nil {
		return x.JvmPoolNewGenUsed
	}
	return 0
}

func (x *PJvmGcDetailed) GetJvmPoolOldGenUsed() float64 {
	if x != nil {
		return x.JvmPoolOldGenUsed
	}
	return 0
}

func (x *PJvmGcDetailed) GetJvmPoolSurvivorSpaceUsed() float64 {
	if x != nil {
		return x.JvmPoolSurvivorSpaceUsed
	}
	return 0
}

func (x *PJvmGcDetailed) GetJvmPoolPermGenUsed() float64 {
	if x != nil {
		return x.JvmPoolPermGenUsed
	}
	return 0
}

func (x *PJvmGcDetailed) GetJvmPoolMetaspaceUsed() float64 {
	if x != nil {
		return x.JvmPoolMetaspaceUsed
	}
	return 0
}

type PCpuLoad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JvmCpuLoad    float64 `protobuf:"fixed64,1,opt,name=jvmCpuLoad,proto3" json:"jvmCpuLoad,omitempty"`
	SystemCpuLoad float64 `protobuf:"fixed64,2,opt,name=systemCpuLoad,proto3" json:"systemCpuLoad,omitempty"`
}

func (x *PCpuLoad) Reset() {
	*x = PCpuLoad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PCpuLoad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PCpuLoad) ProtoMessage() {}

func (x *PCpuLoad) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PCpuLoad.ProtoReflect.Descriptor instead.
func (*PCpuLoad) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{13}
}

func (x *PCpuLoad) GetJvmCpuLoad() float64 {
	if x != nil {
		return x.JvmCpuLoad
	}
	return 0
}

func (x *PCpuLoad) GetSystemCpuLoad() float64 {
	if x != nil {
		return x.SystemCpuLoad
	}
	return 0
}

type PTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SampledNewCount            int64 `protobuf:"varint,2,opt,name=sampledNewCount,proto3" json:"sampledNewCount,omitempty"`
	SampledContinuationCount   int64 `protobuf:"varint,3,opt,name=sampledContinuationCount,proto3" json:"sampledContinuationCount,omitempty"`
	UnsampledNewCount          int64 `protobuf:"varint,4,opt,name=unsampledNewCount,proto3" json:"unsampledNewCount,omitempty"`
	UnsampledContinuationCount int64 `protobuf:"varint,5,opt,name=unsampledContinuationCount,proto3" json:"unsampledContinuationCount,omitempty"`
	SkippedNewCount            int64 `protobuf:"varint,6,opt,name=skippedNewCount,proto3" json:"skippedNewCount,omitempty"`
	SkippedContinuationCount   int64 `protobuf:"varint,7,opt,name=skippedContinuationCount,proto3" json:"skippedContinuationCount,omitempty"`
}

func (x *PTransaction) Reset() {
	*x = PTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PTransaction) ProtoMessage() {}

func (x *PTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PTransaction.ProtoReflect.Descriptor instead.
func (*PTransaction) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{14}
}

func (x *PTransaction) GetSampledNewCount() int64 {
	if x != nil {
		return x.SampledNewCount
	}
	return 0
}

func (x *PTransaction) GetSampledContinuationCount() int64 {
	if x != nil {
		return x.SampledContinuationCount
	}
	return 0
}

func (x *PTransaction) GetUnsampledNewCount() int64 {
	if x != nil {
		return x.UnsampledNewCount
	}
	return 0
}

func (x *PTransaction) GetUnsampledContinuationCount() int64 {
	if x != nil {
		return x.UnsampledContinuationCount
	}
	return 0
}

func (x *PTransaction) GetSkippedNewCount() int64 {
	if x != nil {
		return x.SkippedNewCount
	}
	return 0
}

func (x *PTransaction) GetSkippedContinuationCount() int64 {
	if x != nil {
		return x.SkippedContinuationCount
	}
	return 0
}

type PActiveTraceHistogram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version             int32   `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	HistogramSchemaType int32   `protobuf:"varint,2,opt,name=histogramSchemaType,proto3" json:"histogramSchemaType,omitempty"`
	ActiveTraceCount    []int32 `protobuf:"varint,3,rep,packed,name=activeTraceCount,proto3" json:"activeTraceCount,omitempty"`
}

func (x *PActiveTraceHistogram) Reset() {
	*x = PActiveTraceHistogram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PActiveTraceHistogram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PActiveTraceHistogram) ProtoMessage() {}

func (x *PActiveTraceHistogram) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PActiveTraceHistogram.ProtoReflect.Descriptor instead.
func (*PActiveTraceHistogram) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{15}
}

func (x *PActiveTraceHistogram) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PActiveTraceHistogram) GetHistogramSchemaType() int32 {
	if x != nil {
		return x.HistogramSchemaType
	}
	return 0
}

func (x *PActiveTraceHistogram) GetActiveTraceCount() []int32 {
	if x != nil {
		return x.ActiveTraceCount
	}
	return nil
}

type PActiveTrace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Histogram *PActiveTraceHistogram `protobuf:"bytes,1,opt,name=histogram,proto3" json:"histogram,omitempty"`
}

func (x *PActiveTrace) Reset() {
	*x = PActiveTrace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PActiveTrace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PActiveTrace) ProtoMessage() {}

func (x *PActiveTrace) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PActiveTrace.ProtoReflect.Descriptor instead.
func (*PActiveTrace) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{16}
}

func (x *PActiveTrace) GetHistogram() *PActiveTraceHistogram {
	if x != nil {
		return x.Histogram
	}
	return nil
}

type PResponseTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avg int64 `protobuf:"varint,1,opt,name=avg,proto3" json:"avg,omitempty"`
	Max int64 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *PResponseTime) Reset() {
	*x = PResponseTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PResponseTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PResponseTime) ProtoMessage() {}

func (x *PResponseTime) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PResponseTime.ProtoReflect.Descriptor instead.
func (*PResponseTime) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{17}
}

func (x *PResponseTime) GetAvg() int64 {
	if x != nil {
		return x.Avg
	}
	return 0
}

func (x *PResponseTime) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

type PDeadlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count      int32          `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	ThreadDump []*PThreadDump `protobuf:"bytes,2,rep,name=threadDump,proto3" json:"threadDump,omitempty"`
}

func (x *PDeadlock) Reset() {
	*x = PDeadlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PDeadlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDeadlock) ProtoMessage() {}

func (x *PDeadlock) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDeadlock.ProtoReflect.Descriptor instead.
func (*PDeadlock) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{18}
}

func (x *PDeadlock) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PDeadlock) GetThreadDump() []*PThreadDump {
	if x != nil {
		return x.ThreadDump
	}
	return nil
}

type PDirectBuffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirectCount      int64 `protobuf:"varint,1,opt,name=directCount,proto3" json:"directCount,omitempty"`
	DirectMemoryUsed int64 `protobuf:"varint,2,opt,name=directMemoryUsed,proto3" json:"directMemoryUsed,omitempty"`
	MappedCount      int64 `protobuf:"varint,3,opt,name=mappedCount,proto3" json:"mappedCount,omitempty"`
	MappedMemoryUsed int64 `protobuf:"varint,4,opt,name=mappedMemoryUsed,proto3" json:"mappedMemoryUsed,omitempty"`
}

func (x *PDirectBuffer) Reset() {
	*x = PDirectBuffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PDirectBuffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDirectBuffer) ProtoMessage() {}

func (x *PDirectBuffer) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDirectBuffer.ProtoReflect.Descriptor instead.
func (*PDirectBuffer) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{19}
}

func (x *PDirectBuffer) GetDirectCount() int64 {
	if x != nil {
		return x.DirectCount
	}
	return 0
}

func (x *PDirectBuffer) GetDirectMemoryUsed() int64 {
	if x != nil {
		return x.DirectMemoryUsed
	}
	return 0
}

func (x *PDirectBuffer) GetMappedCount() int64 {
	if x != nil {
		return x.MappedCount
	}
	return 0
}

func (x *PDirectBuffer) GetMappedMemoryUsed() int64 {
	if x != nil {
		return x.MappedMemoryUsed
	}
	return 0
}

type PTotalThread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalThreadCount int64 `protobuf:"varint,1,opt,name=totalThreadCount,proto3" json:"totalThreadCount,omitempty"`
}

func (x *PTotalThread) Reset() {
	*x = PTotalThread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PTotalThread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PTotalThread) ProtoMessage() {}

func (x *PTotalThread) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PTotalThread.ProtoReflect.Descriptor instead.
func (*PTotalThread) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{20}
}

func (x *PTotalThread) GetTotalThreadCount() int64 {
	if x != nil {
		return x.TotalThreadCount
	}
	return 0
}

type PLoadedClass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoadedClassCount   int64 `protobuf:"varint,1,opt,name=loadedClassCount,proto3" json:"loadedClassCount,omitempty"`
	UnloadedClassCount int64 `protobuf:"varint,2,opt,name=unloadedClassCount,proto3" json:"unloadedClassCount,omitempty"`
}

func (x *PLoadedClass) Reset() {
	*x = PLoadedClass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PLoadedClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PLoadedClass) ProtoMessage() {}

func (x *PLoadedClass) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PLoadedClass.ProtoReflect.Descriptor instead.
func (*PLoadedClass) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{21}
}

func (x *PLoadedClass) GetLoadedClassCount() int64 {
	if x != nil {
		return x.LoadedClassCount
	}
	return 0
}

func (x *PLoadedClass) GetUnloadedClassCount() int64 {
	if x != nil {
		return x.UnloadedClassCount
	}
	return 0
}

type PAgentUriStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp     int64           `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	BucketVersion int32           `protobuf:"varint,2,opt,name=bucketVersion,proto3" json:"bucketVersion,omitempty"`
	EachUriStat   []*PEachUriStat `protobuf:"bytes,3,rep,name=eachUriStat,proto3" json:"eachUriStat,omitempty"`
}

func (x *PAgentUriStat) Reset() {
	*x = PAgentUriStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PAgentUriStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PAgentUriStat) ProtoMessage() {}

func (x *PAgentUriStat) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PAgentUriStat.ProtoReflect.Descriptor instead.
func (*PAgentUriStat) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{22}
}

func (x *PAgentUriStat) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PAgentUriStat) GetBucketVersion() int32 {
	if x != nil {
		return x.BucketVersion
	}
	return 0
}

func (x *PAgentUriStat) GetEachUriStat() []*PEachUriStat {
	if x != nil {
		return x.EachUriStat
	}
	return nil
}

type PEachUriStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri             string         `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	TotalHistogram  *PUriHistogram `protobuf:"bytes,2,opt,name=totalHistogram,proto3" json:"totalHistogram,omitempty"`
	FailedHistogram *PUriHistogram `protobuf:"bytes,3,opt,name=failedHistogram,proto3" json:"failedHistogram,omitempty"`
}

func (x *PEachUriStat) Reset() {
	*x = PEachUriStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PEachUriStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PEachUriStat) ProtoMessage() {}

func (x *PEachUriStat) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PEachUriStat.ProtoReflect.Descriptor instead.
func (*PEachUriStat) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{23}
}

func (x *PEachUriStat) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *PEachUriStat) GetTotalHistogram() *PUriHistogram {
	if x != nil {
		return x.TotalHistogram
	}
	return nil
}

func (x *PEachUriStat) GetFailedHistogram() *PUriHistogram {
	if x != nil {
		return x.FailedHistogram
	}
	return nil
}

type PUriHistogram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count     int32   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Avg       float64 `protobuf:"fixed64,2,opt,name=avg,proto3" json:"avg,omitempty"`
	Max       int64   `protobuf:"varint,3,opt,name=max,proto3" json:"max,omitempty"`
	Histogram []int32 `protobuf:"varint,4,rep,packed,name=histogram,proto3" json:"histogram,omitempty"`
}

func (x *PUriHistogram) Reset() {
	*x = PUriHistogram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_Stat_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PUriHistogram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PUriHistogram) ProtoMessage() {}

func (x *PUriHistogram) ProtoReflect() protoreflect.Message {
	mi := &file_v1_Stat_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PUriHistogram.ProtoReflect.Descriptor instead.
func (*PUriHistogram) Descriptor() ([]byte, []int) {
	return file_v1_Stat_proto_rawDescGZIP(), []int{24}
}

func (x *PUriHistogram) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PUriHistogram) GetAvg() float64 {
	if x != nil {
		return x.Avg
	}
	return 0
}

func (x *PUriHistogram) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *PUriHistogram) GetHistogram() []int32 {
	if x != nil {
		return x.Histogram
	}
	return nil
}

var File_v1_Stat_proto protoreflect.FileDescriptor

var file_v1_Stat_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x76, 0x31, 0x2f, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x76, 0x31, 0x1a, 0x13, 0x76, 0x31, 0x2f, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x44, 0x75,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x50, 0x50, 0x69, 0x6e,
	0x67, 0x22, 0xbf, 0x01, 0x0a, 0x0c, 0x50, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x48, 0x00, 0x52, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x48,
	0x00, 0x52, 0x0e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x12, 0x37, 0x0a, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x69, 0x53, 0x74, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x55, 0x72, 0x69, 0x53, 0x74, 0x61, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x55, 0x72, 0x69, 0x53, 0x74, 0x61, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x22, 0x89, 0x03, 0x0a, 0x0a, 0x50, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x76, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x76, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x07, 0x6a, 0x76, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x4a, 0x76, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6a, 0x76, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x22,
	0x7b, 0x0a, 0x0f, 0x50, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x6d, 0x41, 0x72, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x6d, 0x41, 0x72, 0x67, 0x12, 0x32, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x50, 0x0a, 0x0c,
	0x50, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x62, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x62, 0x22, 0x6a,
	0x0a, 0x08, 0x50, 0x4a, 0x76, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x4a, 0x76, 0x6d, 0x47, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x06, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x22, 0x97, 0x05, 0x0a, 0x0a, 0x50,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x1a, 0x0a, 0x02, 0x67, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x4a, 0x76, 0x6d, 0x47, 0x63, 0x52, 0x02, 0x67, 0x63, 0x12, 0x26, 0x0a,
	0x07, 0x63, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x43, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x63, 0x70,
	0x75, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x32, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x0b, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x3b, 0x0a,
	0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0c, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x3b, 0x0a, 0x0e,
	0x66, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x0c, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x52, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x12, 0x32, 0x0a, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x4c, 0x6f, 0x61, 0x64,
	0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x22, 0x3f, 0x0a, 0x0f, 0x50, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x2c, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x52, 0x09, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x22, 0xdf, 0x01, 0x0a, 0x0b, 0x50, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x32, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x14, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x78,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x42, 0x0a, 0x0f, 0x50, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x4b, 0x0a, 0x0f, 0x50,
	0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x38,
	0x0a, 0x17, 0x6f, 0x70, 0x65, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x17, 0x6f, 0x70, 0x65, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf0, 0x02, 0x0a, 0x06, 0x50, 0x4a, 0x76,
	0x6d, 0x47, 0x63, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x4a, 0x76, 0x6d, 0x47, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6a, 0x76, 0x6d, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x48, 0x65, 0x61, 0x70, 0x55, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x6a, 0x76, 0x6d, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x48, 0x65, 0x61,
	0x70, 0x55, 0x73, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6a, 0x76, 0x6d, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x48, 0x65, 0x61, 0x70, 0x4d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x6a, 0x76, 0x6d, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x48, 0x65, 0x61, 0x70, 0x4d, 0x61,
	0x78, 0x12, 0x32, 0x0a, 0x14, 0x6a, 0x76, 0x6d, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4e, 0x6f,
	0x6e, 0x48, 0x65, 0x61, 0x70, 0x55, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x14, 0x6a, 0x76, 0x6d, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4e, 0x6f, 0x6e, 0x48, 0x65, 0x61,
	0x70, 0x55, 0x73, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x6a, 0x76, 0x6d, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x4e, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x70, 0x4d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x13, 0x6a, 0x76, 0x6d, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4e, 0x6f, 0x6e,
	0x48, 0x65, 0x61, 0x70, 0x4d, 0x61, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x6a, 0x76, 0x6d, 0x47, 0x63,
	0x4f, 0x6c, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x6a, 0x76, 0x6d, 0x47, 0x63, 0x4f, 0x6c, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x6a, 0x76, 0x6d, 0x47, 0x63, 0x4f, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x6a, 0x76, 0x6d, 0x47, 0x63, 0x4f, 0x6c, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x38, 0x0a, 0x0d, 0x6a, 0x76, 0x6d, 0x47, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x4a,
	0x76, 0x6d, 0x47, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x0d, 0x6a, 0x76,
	0x6d, 0x47, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x22, 0x8a, 0x03, 0x0a, 0x0e,
	0x50, 0x4a, 0x76, 0x6d, 0x47, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x6a, 0x76, 0x6d, 0x47, 0x63, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6a, 0x76, 0x6d, 0x47, 0x63, 0x4e, 0x65, 0x77, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6a, 0x76, 0x6d, 0x47, 0x63, 0x4e, 0x65, 0x77,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6a, 0x76, 0x6d, 0x47,
	0x63, 0x4e, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x6a, 0x76, 0x6d, 0x50,
	0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x55, 0x73, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x6a, 0x76, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x55, 0x73, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11,
	0x6a, 0x76, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x65, 0x77, 0x47, 0x65, 0x6e, 0x55, 0x73, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6a, 0x76, 0x6d, 0x50, 0x6f, 0x6f, 0x6c,
	0x4e, 0x65, 0x77, 0x47, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6a, 0x76,
	0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x4f, 0x6c, 0x64, 0x47, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6a, 0x76, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x4f, 0x6c,
	0x64, 0x47, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x6a, 0x76, 0x6d, 0x50,
	0x6f, 0x6f, 0x6c, 0x53, 0x75, 0x72, 0x76, 0x69, 0x76, 0x6f, 0x72, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x55, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x6a, 0x76, 0x6d, 0x50,
	0x6f, 0x6f, 0x6c, 0x53, 0x75, 0x72, 0x76, 0x69, 0x76, 0x6f, 0x72, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x55, 0x73, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x6a, 0x76, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x50,
	0x65, 0x72, 0x6d, 0x47, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x12, 0x6a, 0x76, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x47, 0x65, 0x6e,
	0x55, 0x73, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x6a, 0x76, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x4d,
	0x65, 0x74, 0x61, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x14, 0x6a, 0x76, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x64, 0x22, 0x50, 0x0a, 0x08, 0x50, 0x43, 0x70, 0x75,
	0x4c, 0x6f, 0x61, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6a, 0x76, 0x6d, 0x43, 0x70, 0x75, 0x4c, 0x6f,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6a, 0x76, 0x6d, 0x43, 0x70, 0x75,
	0x4c, 0x6f, 0x61, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x70,
	0x75, 0x4c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x43, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x22, 0xc8, 0x02, 0x0a, 0x0c, 0x50,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x64, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x64, 0x4e, 0x65, 0x77,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2c, 0x0a, 0x11, 0x75, 0x6e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x64, 0x4e, 0x65,
	0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x75, 0x6e,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x64, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x3e, 0x0a, 0x1a, 0x75, 0x6e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x1a, 0x75, 0x6e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x28, 0x0a, 0x0f, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65,
	0x64, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x73, 0x6b, 0x69,
	0x70, 0x70, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x73, 0x6b, 0x69,
	0x70, 0x70, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x15, 0x50, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x0c, 0x50, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x22, 0x33, 0x0a, 0x0d, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x76, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x61, 0x76, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6d, 0x61, 0x78, 0x22, 0x52, 0x0a, 0x09, 0x50, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x44, 0x75, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x44, 0x75, 0x6d, 0x70, 0x52, 0x0a, 0x74,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x44, 0x75, 0x6d, 0x70, 0x22, 0xab, 0x01, 0x0a, 0x0d, 0x50, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a,
	0x10, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x70,
	0x70, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x6d,
	0x61, 0x70, 0x70, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x55, 0x73, 0x65, 0x64, 0x22, 0x3a, 0x0a, 0x0c, 0x50, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x6a, 0x0a, 0x0c, 0x50, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2e, 0x0a, 0x12, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x75, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x87, 0x01, 0x0a, 0x0d, 0x50, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x69, 0x53, 0x74, 0x61,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x24, 0x0a, 0x0d, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x0b, 0x65, 0x61, 0x63, 0x68, 0x55, 0x72, 0x69,
	0x53, 0x74, 0x61, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x45, 0x61, 0x63, 0x68, 0x55, 0x72, 0x69, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0b, 0x65, 0x61,
	0x63, 0x68, 0x55, 0x72, 0x69, 0x53, 0x74, 0x61, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x0c, 0x50, 0x45,
	0x61, 0x63, 0x68, 0x55, 0x72, 0x69, 0x53, 0x74, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x39, 0x0a, 0x0e,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x55, 0x72, 0x69, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x3b, 0x0a, 0x0f, 0x66, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x55, 0x72, 0x69, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x52, 0x0f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x22, 0x67, 0x0a, 0x0d, 0x50, 0x55, 0x72, 0x69, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x76, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x61, 0x76, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12,
	0x1c, 0x0a, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2a, 0x80, 0x01,
	0x0a, 0x0a, 0x50, 0x4a, 0x76, 0x6d, 0x47, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13,
	0x4a, 0x56, 0x4d, 0x5f, 0x47, 0x43, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4a, 0x56, 0x4d, 0x5f, 0x47, 0x43, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x18, 0x0a,
	0x14, 0x4a, 0x56, 0x4d, 0x5f, 0x47, 0x43, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x52,
	0x41, 0x4c, 0x4c, 0x45, 0x4c, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x4a, 0x56, 0x4d, 0x5f, 0x47,
	0x43, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4d, 0x53, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e,
	0x4a, 0x56, 0x4d, 0x5f, 0x47, 0x43, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x31, 0x10, 0x04,
	0x42, 0x35, 0x0a, 0x21, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x61, 0x76, 0x65, 0x72, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x70, 0x69, 0x6e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x42, 0x09, 0x53, 0x74, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x03, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_Stat_proto_rawDescOnce sync.Once
	file_v1_Stat_proto_rawDescData = file_v1_Stat_proto_rawDesc
)

func file_v1_Stat_proto_rawDescGZIP() []byte {
	file_v1_Stat_proto_rawDescOnce.Do(func() {
		file_v1_Stat_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_Stat_proto_rawDescData)
	})
	return file_v1_Stat_proto_rawDescData
}

var file_v1_Stat_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1_Stat_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_v1_Stat_proto_goTypes = []interface{}{
	(PJvmGcType)(0),               // 0: v1.PJvmGcType
	(*PPing)(nil),                 // 1: v1.PPing
	(*PStatMessage)(nil),          // 2: v1.PStatMessage
	(*PAgentInfo)(nil),            // 3: v1.PAgentInfo
	(*PServerMetaData)(nil),       // 4: v1.PServerMetaData
	(*PServiceInfo)(nil),          // 5: v1.PServiceInfo
	(*PJvmInfo)(nil),              // 6: v1.PJvmInfo
	(*PAgentStat)(nil),            // 7: v1.PAgentStat
	(*PAgentStatBatch)(nil),       // 8: v1.PAgentStatBatch
	(*PDataSource)(nil),           // 9: v1.PDataSource
	(*PDataSourceList)(nil),       // 10: v1.PDataSourceList
	(*PFileDescriptor)(nil),       // 11: v1.PFileDescriptor
	(*PJvmGc)(nil),                // 12: v1.PJvmGc
	(*PJvmGcDetailed)(nil),        // 13: v1.PJvmGcDetailed
	(*PCpuLoad)(nil),              // 14: v1.PCpuLoad
	(*PTransaction)(nil),          // 15: v1.PTransaction
	(*PActiveTraceHistogram)(nil), // 16: v1.PActiveTraceHistogram
	(*PActiveTrace)(nil),          // 17: v1.PActiveTrace
	(*PResponseTime)(nil),         // 18: v1.PResponseTime
	(*PDeadlock)(nil),             // 19: v1.PDeadlock
	(*PDirectBuffer)(nil),         // 20: v1.PDirectBuffer
	(*PTotalThread)(nil),          // 21: v1.PTotalThread
	(*PLoadedClass)(nil),          // 22: v1.PLoadedClass
	(*PAgentUriStat)(nil),         // 23: v1.PAgentUriStat
	(*PEachUriStat)(nil),          // 24: v1.PEachUriStat
	(*PUriHistogram)(nil),         // 25: v1.PUriHistogram
	(*PThreadDump)(nil),           // 26: v1.PThreadDump
}
var file_v1_Stat_proto_depIdxs = []int32{
	7,  // 0: v1.PStatMessage.agentStat:type_name -> v1.PAgentStat
	8,  // 1: v1.PStatMessage.agentStatBatch:type_name -> v1.PAgentStatBatch
	23, // 2: v1.PStatMessage.agentUriStat:type_name -> v1.PAgentUriStat
	4,  // 3: v1.PAgentInfo.serverMetaData:type_name -> v1.PServerMetaData
	6,  // 4: v1.PAgentInfo.jvmInfo:type_name -> v1.PJvmInfo
	5,  // 5: v1.PServerMetaData.serviceInfo:type_name -> v1.PServiceInfo
	0,  // 6: v1.PJvmInfo.gcType:type_name -> v1.PJvmGcType
	12, // 7: v1.PAgentStat.gc:type_name -> v1.PJvmGc
	14, // 8: v1.PAgentStat.cpuLoad:type_name -> v1.PCpuLoad
	15, // 9: v1.PAgentStat.transaction:type_name -> v1.PTransaction
	17, // 10: v1.PAgentStat.activeTrace:type_name -> v1.PActiveTrace
	10, // 11: v1.PAgentStat.dataSourceList:type_name -> v1.PDataSourceList
	18, // 12: v1.PAgentStat.responseTime:type_name -> v1.PResponseTime
	19, // 13: v1.PAgentStat.deadlock:type_name -> v1.PDeadlock
	11, // 14: v1.PAgentStat.fileDescriptor:type_name -> v1.PFileDescriptor
	20, // 15: v1.PAgentStat.directBuffer:type_name -> v1.PDirectBuffer
	21, // 16: v1.PAgentStat.totalThread:type_name -> v1.PTotalThread
	22, // 17: v1.PAgentStat.loadedClass:type_name -> v1.PLoadedClass
	7,  // 18: v1.PAgentStatBatch.agentStat:type_name -> v1.PAgentStat
	9,  // 19: v1.PDataSourceList.dataSource:type_name -> v1.PDataSource
	0,  // 20: v1.PJvmGc.type:type_name -> v1.PJvmGcType
	13, // 21: v1.PJvmGc.jvmGcDetailed:type_name -> v1.PJvmGcDetailed
	16, // 22: v1.PActiveTrace.histogram:type_name -> v1.PActiveTraceHistogram
	26, // 23: v1.PDeadlock.threadDump:type_name -> v1.PThreadDump
	24, // 24: v1.PAgentUriStat.eachUriStat:type_name -> v1.PEachUriStat
	25, // 25: v1.PEachUriStat.totalHistogram:type_name -> v1.PUriHistogram
	25, // 26: v1.PEachUriStat.failedHistogram:type_name -> v1.PUriHistogram
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_v1_Stat_proto_init() }
func file_v1_Stat_proto_init() {
	if File_v1_Stat_proto != nil {
		return
	}
	file_v1_ThreadDump_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_v1_Stat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PPing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PStatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PAgentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PServerMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PServiceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PJvmInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PAgentStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PAgentStatBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PDataSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PDataSourceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PFileDescriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PJvmGc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PJvmGcDetailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PCpuLoad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PActiveTraceHistogram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PActiveTrace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PResponseTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PDeadlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PDirectBuffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PTotalThread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PLoadedClass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PAgentUriStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PEachUriStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_Stat_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PUriHistogram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1_Stat_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*PStatMessage_AgentStat)(nil),
		(*PStatMessage_AgentStatBatch)(nil),
		(*PStatMessage_AgentUriStat)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_Stat_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_Stat_proto_goTypes,
		DependencyIndexes: file_v1_Stat_proto_depIdxs,
		EnumInfos:         file_v1_Stat_proto_enumTypes,
		MessageInfos:      file_v1_Stat_proto_msgTypes,
	}.Build()
	File_v1_Stat_proto = out.File
	file_v1_Stat_proto_rawDesc = nil
	file_v1_Stat_proto_goTypes = nil
	file_v1_Stat_proto_depIdxs = nil
}
